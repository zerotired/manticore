# ------------------------------------------
#   Sphinx infrastructure
# ------------------------------------------

[sphinx]
recipe = zc.recipe.egg:script
eggs =
        Sphinx
        roman
        PIL
        sphinxcontrib-sdedit
        sphinxcontrib-seqdiag
        sphinxcontrib-blockdiag
        sphinxcontrib-nwdiag
        breathe
        sphinxcontrib-doxylink
        zt.manticore

# FIXME: how to add these dependencies at runtime and **not** in ``buildout-base.cfg``!?

# dependencies for "sphinxcontrib.feed"
        python-dateutil==1.5
        html5lib==0.90

# dependencies for "velruse"
        anykeystore
        pyramid
        requests
        python-openid
        oauth2

scripts = sphinx-build
initialization =
  sys.argv.extend(['-E', '${buildout:directory}/src', '${buildout:directory}/var/sphinx'])

[sphinx-latex]
recipe = zc.recipe.egg:script
eggs = ${sphinx:eggs}
scripts = sphinx-build=sphinx-latex
initialization =
  sys.argv.extend(['-b', 'latex', '-E', '${buildout:directory}/src', '${buildout:directory}/var/latex'])

[sphinx-all]
recipe = lovely.recipe:mkfile
path = ${buildout:bin-directory}/sphinx-all
mode = 0755
content =
  #!/bin/sh
  ${buildout:bin-directory}/sphinx-build
  ${buildout:bin-directory}/sphinx-latex
  cd ${buildout:directory}/var/latex && make


# ------------------------------------------
#   Manticore infrastructure
# ------------------------------------------

# this project itself
[manticore]
recipe = zerokspot.recipe.git
repository = git://github.com/zerotired/manticore.git

[manticore-ext]
recipe = zerokspot.recipe.git
repository = git://github.com/zerotired/manticore-ext.git


# all scripts

[manticore-scripts]
recipe = zc.recipe.egg:script
eggs = zt.manticore.ext
interpreter = python
scripts =

    # bugseverywhere
    be
    bugseverywhere-html

    # manticore addons
    changes-aggregate
    statistics-build
    gource-render-all
    gource-render-single
    laig


# some scripts get individual default commandline arguments

[manticore-changes]
recipe = zc.recipe.egg:script
eggs = zt.manticore.ext
scripts = changes-aggregate
initialization =
    sys.argv.extend(['${buildout:directory}/src/artefacts', '${buildout:directory}/src/summary'])

[manticore-statistics]
recipe = zc.recipe.egg:script
eggs = zt.manticore.ext
scripts = statistics-build
initialization =
    import os
    os.environ['GITSTATS'] = os.path.join('${buildout:directory}', 'parts', 'gitstats', 'gitstats')
    os.environ['STATSVN'] = os.path.join('${buildout:directory}', 'parts', 'statsvn', 'statsvn.jar')
    sys.argv.extend(['${buildout:directory}/src/artefacts', '${buildout:directory}/var/sphinx/summary/statistics', '${buildout:directory}/src/summary'])

[manticore-gource]
recipe = zc.recipe.egg:script
eggs = zt.manticore.ext
scripts =
    gource-render-all
    gource-render-single
initialization =
    sys.argv.insert(1, '${buildout:directory}/src/artefacts')
    sys.argv.insert(2, '${buildout:directory}/var/sphinx/_downloads/gource')

[manticore-bugseverywhere]
recipe = zc.recipe.egg:script
eggs = zt.manticore.ext
scripts = bugseverywhere-html
initialization =
    import os
    os.environ['BE'] = os.path.join('${buildout:directory}', 'bin', 'be')
    sys.argv.extend(['${buildout:directory}/src/artefacts', '${buildout:directory}/var/sphinx/_downloads/bugseverywhere'])


# ------------------------------------------
#   3rd party tools
# ------------------------------------------

[gitstats]
recipe = zerokspot.recipe.git
repository = git://gitorious.org/gitstats/mainline.git

[statsvn]
recipe = hexagonit.recipe.download
url = http://downloads.sourceforge.net/project/statsvn/statsvn/0.7.0/statsvn-0.7.0.zip
strip-top-level-dir = True

[sdedit]
recipe = hexagonit.recipe.download
url = http://downloads.sourceforge.net/project/sdedit/sdedit/3.1/sdedit-3.1.jar
download-only = true


# ------------------------------------------
#   nginx
# ------------------------------------------

[nginx]
recipe = zc.recipe.cmmi
url = http://nginx.org/download/nginx-1.4.2.tar.gz
strip-top-level-dir = true
extra_options = --with-debug
            --add-module=${nginx-headers_more_module:destination}
            --with-cc-opt="-D NGX_HAVE_CASELESS_FILESYSTEM=0"
            --with-http_stub_status_module
depends = ${nginx-headers_more_module:recipe}
#cache_size = 64

[nginx-headers_more_module]
recipe = hexagonit.recipe.download
url = http://github.com/agentzh/headers-more-nginx-module/tarball/v0.22
strip-top-level-dir = true

[nginx-ctl]
recipe = lovely.recipe:mkfile
path = ${buildout:bin-directory}/nginx
mode = 0755
content =
    #!/bin/sh
    PIDFILE=${nginx:location}/logs/nginx.pid
      case "$1" in
        start)
          if [ ! -d ${buildout:directory}/var/nginx/cache ]; then
            mkdir -p ${buildout:directory}/var/nginx/cache
          fi
          if [ ! -d ${buildout:directory}/var/nginx/temp ]; then
            mkdir -p ${buildout:directory}/var/nginx/temp
          fi
          if [ ! -d ${buildout:directory}/var/nginx/client_body_temp ]; then
            mkdir -p ${buildout:directory}/var/nginx/client_body_temp
          fi
          ${nginx:location}/sbin/nginx -c ${nginx:location}/conf/manticore.conf
          ;;
        stop)
          kill -QUIT `cat $PIDFILE`
          ;;
        reload)
          kill -HUP `cat $PIDFILE`
        ;;
        newlogs)
          kill -USR1 `cat $PIDFILE`
        ;;
        restart|force-reload)
          $0 stop
          sleep 1
          $0 start
          ;;
        *)
          echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload|newlogs}" >&2
          exit 1
          ;;
      esac


# ------------------------------------------
#   templates
# ------------------------------------------

[templates]
recipe = z3c.recipe.filetemplate
source-directory = templates
force-overwrite = true
interpreted-options = hostname
hostname = os.uname()[1].lstrip('wlan.').split('.')[0]
